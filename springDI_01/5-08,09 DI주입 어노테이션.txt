@Rrequired - 필수 프로퍼터명시(setXxx()에만 적용)
  		- 필수요소를 설정(반드시 값이 주입 필수) 
  		- RequiredAnnotationBeanPostProcessor	
   

@Autowired - 의존관계 자동설정(생성자, 필드, 메소드)
	    setter메소드,생성자,property모든 선언 가능.
	    동일한 객체가 한개이면 byType 주입
            동일한 객체가 여러개이면 byName 주입
            만약 동일한 객체 여러개인데 byName이 일치하지 안흐면 오류 발생
  	    id와 property명이 일치하는 객체를 찾아서 주입(byName)
	  - AutowiredAnnotationBeanPostProcessor
	


@Qualifier - 동일한 타입의 빈 객체들 중에서 특정 빈 사용하도록 설정
	   - @Autowired를 사용할때 동일한 객체가 여러개 있는 경우 byName으로 주입되는 이름이 
             동일하지 않으면 오류가 발생한다. 이럴때 자바소스와 xml 문서에 Qulifier를 적용하여
             같은 이름으로 주입

	    ->autowire name은 이름 맞춰야 하는데 이게 번거로우니까 Qualifier 같이 써


@Resource - 어플리케이션에서 필요로 하느 자원을 자동 연결
  -CommonAnnotationBeanPostProcessor


	  ->> Qualifier도 귀찮아 그냥 내가 전부다 연결 시켜 버릴거야 할때!!
	  ->> 동일한 객체가 여러개 있을 경우 사용 
              @Resource(name="id이름")선언 하면 id이름과 일치하는 객체를 찾아 주입 해준다.

 
 * RequiredAnnotationBeanPostProcessor
 * AutowiredAnnotationBeanPostProcessor
 * CommonAnnotationBeanPostProcessor

   => 위 3가지를 동시에 적용하기 위한 태그
     <context-annotation-config/>
네임스페이스 탭에 context체크해야해!!!

--------------------------------------------------

@Component 설정
 <context:component-scan base-package="경로"/>

    context:component-scan를 설정하면 
       context:annotation-config 설정하지 않아도
    기본적으로 @Rrequired, @Autowired, @Resource 모두 적용한다

 -> 객체를 생성!! (xml문서에 bean을 생략!!!)

  *@Component를 상속받은 서브클래스.
    -@Controller
    -@Service
    -@Repository


->base 패키지 밑으로 어노테이션 @Component되어있는 애들은 전부 자동으로 적용이 돼!!!